# ==============================================================================
# AI Nurse Florence Configuration
# ==============================================================================
# Copy this file to .env and update the values for your environment

# ==============================================================================
# OpenAI Configuration
# ==============================================================================
# Required for AI functionality - get from https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-key-here

# Optional: NIH API base URL for medical data (if using custom NIH endpoint)
# NIH_API_BASE=https://api.nih.gov

# Default AI model to use (options: gpt-4o-mini, gpt-4o, gpt-3.5-turbo, etc.)
MODEL=gpt-4o-mini

# ==============================================================================
# Database Configuration  
# ==============================================================================
# SQLite (default for local development)
DATABASE_URL=sqlite+aiosqlite:///./ai_nurse_florence.db

# PostgreSQL (recommended for production)
# DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/ai_nurse_florence

# ==============================================================================
# Authentication & Security
# ==============================================================================
# Secret key for JWT signing - CHANGE IN PRODUCTION!
JWT_SECRET_KEY=your-secret-key-change-in-production

# JWT algorithm (HS256 is standard)
JWT_ALGORITHM=HS256

# Token expiration time in minutes (default: 30 minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==============================================================================
# OAuth2 Configuration (for OpenAI GPT integration)
# ==============================================================================
# Required for GPT Store integration - get from OpenAI Developer Console
# OAUTH_CLIENT_ID=your-openai-oauth-client-id
# OAUTH_CLIENT_SECRET=your-openai-oauth-client-secret

# ==============================================================================
# Legacy API Authentication (backward compatibility)
# ==============================================================================
# Optional: Legacy bearer token for API access
# API_BEARER=your-legacy-api-key-here

# ==============================================================================
# CORS Configuration
# ==============================================================================
# Comma-separated list of allowed origins for CORS
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,https://example.com

# ==============================================================================
# Rate Limiting
# ==============================================================================
# Maximum requests per minute per client
RATE_LIMIT_PER_MINUTE=60

# ==============================================================================
# Redis Configuration (optional)
# ==============================================================================
# Required for advanced caching and background tasks
# Local Redis
# REDIS_URL=redis://localhost:6379/0

# Docker Redis
# REDIS_URL=redis://redis:6379/0

# Redis Cloud/Remote
# REDIS_URL=redis://username:password@host:port/db

# ==============================================================================
# Feature Flags
# ==============================================================================
# Use live external APIs (true) vs mocked data (false) - recommended false for development
USE_LIVE=false

# ==============================================================================
# Logging Configuration
# ==============================================================================
# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ==============================================================================
# Monitoring Configuration (optional)
# ==============================================================================
# Grafana configuration for monitoring
# GRAFANA_ADMIN_USER=admin
# GRAFANA_ADMIN_PASSWORD=admin