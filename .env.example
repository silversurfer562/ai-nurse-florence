# Example environment variables for AI Nurse Florence
# Copy this to .env and edit values locally

# Application
APP_ENV=development
APP_VERSION=0.0.0

# External services
DATABASE_URL=postgresql://user:pass@localhost:5432/ai_nurse
REDIS_URL=redis://localhost:6379/0
USE_LIVE_SERVICES=false

# OpenAI (optional)
OPENAI_API_KEY=

# MeSH JSON index (optional) - set to a local path to enable MeSH mapping
MESH_JSON_PATH=/path/to/mesh.json

# Railway specific
RAILWAY_ENVIRONMENT=
# AI Nurse Florence - Environment Configuration Template
# Copy this file to .env and customize for your environment
# Never commit .env file with real secrets to version control

# ================================
# APPLICATION SETTINGS
# ================================

# Application Environment
NODE_ENV=development
PYTHON_ENV=development
DEBUG=true

# Application URLs
APP_URL=http://localhost:8000
FRONTEND_URL=http://localhost:3000
API_BASE_URL=http://localhost:8000/api/v1
# Optional: public base URL of this application (overrides HOST/PORT). Use in production.
# Example (local dev):
APP_BASE_URL=http://localhost:8000
# In production (Railway, Docker, or any host) set this to your canonical domain.
# For this project you planned to use: https://ainurseflorence.com
# Example production setting (do NOT commit real secrets):
# APP_BASE_URL=https://ainurseflorence.com
# If APP_BASE_URL is not set, set FORCE_HTTPS=true to construct an https URL from HOST/PORT.
# For production containers where you want constructed https URLs, set:
# FORCE_HTTPS=true
FORCE_HTTPS=false

# ================================
# API AUTHENTICATION & SECURITY
# ================================

# API Bearer Token for internal services (CHANGE THIS!)
API_BEARER=change-me-to-a-strong-random-token-in-production

# JWT Secret Key (Generate a strong secret for production)
JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=30

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,https://silversurfer562.github.io
CORS_ALLOW_CREDENTIALS=true

# ================================
# EXTERNAL SERVICES & APIs
# ================================

# OpenAI Configuration (Optional - for AI features)
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.7

# Medical Data APIs
MYDISEASE_API_URL=https://mydisease.info/v1
MEDLINEPLUS_API_URL=https://connect.medlineplus.gov/service
PUBMED_API_URL=https://eutils.ncbi.nlm.nih.gov/entrez/eutils

# Service Feature Flags
USE_LIVE_APIS=false
USE_MYDISEASE=true
USE_MEDLINEPLUS=true
USE_PUBMED=true

# ================================
# DATABASE CONFIGURATION
# ================================

# SQLite (Default for development)
DATABASE_URL=sqlite:///./ai_nurse_florence.db

# PostgreSQL (Production)
# DATABASE_URL=postgresql://username:password@localhost:5432/ai_nurse_florence
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=ai_nurse_florence
# DB_USER=your_db_user
# DB_PASSWORD=your_db_password

# ================================
# CACHING & PERFORMANCE
# ================================

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0
REDIS_MAX_CONNECTIONS=20

# Cache Settings
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE=1000
ENABLE_CACHING=true

# ================================
# RATE LIMITING & SECURITY
# ================================

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=100
RATE_LIMIT_ENABLED=true

# Security Headers
ENABLE_SECURITY_HEADERS=true
CONTENT_SECURITY_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com
HSTS_MAX_AGE=31536000

# ================================
# LOGGING & MONITORING
# ================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/ai_nurse_florence.log
ENABLE_ACCESS_LOGS=true

# Monitoring & Metrics
ENABLE_METRICS=false
PROMETHEUS_PORT=9090
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=change-me-in-production

# Health Check Settings
HEALTH_CHECK_TIMEOUT=30
HEALTH_CHECK_INTERVAL=60

# ================================
# EMAIL & NOTIFICATIONS (Optional)
# ================================

# SMTP Configuration for notifications
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=noreply@example.com
SMTP_PASSWORD=your-smtp-password
SMTP_TLS=true

# Notification Settings
ADMIN_EMAIL=admin@example.com
ENABLE_EMAIL_NOTIFICATIONS=false

# ================================
# DEPLOYMENT SETTINGS
# ================================

# Server Configuration
SERVER_HOST=0.0.0.0
SERVER_PORT=8000
SERVER_WORKERS=1
SERVER_RELOAD=true

# Production Settings
ENVIRONMENT=production
FUNCTION_TIMEOUT=30
FUNCTION_MEMORY=512

# ================================
# DEVELOPMENT & TESTING
# ================================

# Development Flags
ENABLE_DEBUG_ROUTES=false
ENABLE_RELOAD=true
ENABLE_DOCS=true

# Testing Configuration
TEST_DATABASE_URL=sqlite:///./test_ai_nurse_florence.db
TESTING=false

# ================================
# FEATURE FLAGS
# ================================

# Educational Features
ENABLE_SBAR_TEMPLATES=true
ENABLE_CLINICAL_OPTIMIZER=true
ENABLE_DISEASE_LOOKUP=true

# Advanced Features
ENABLE_USER_AUTHENTICATION=false
ENABLE_USAGE_ANALYTICS=false
ENABLE_CHAT_HISTORY=false

# Optional: override default DB for local dev (uncomment to use)
# DATABASE_URL=sqlite+aiosqlite:///./dev.db

cp .env.example .env
# Edit .env to set OPENAI_API_KEY if needed
# OpenAI Configuration (following OpenAI Integration pattern)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-3.5-turbo

# External Services Configuration
USE_LIVE=false
USE_LIVE_SERVICES=false
