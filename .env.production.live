# AI Nurse Florence - Production Environment with Live Data
# Copy this file to .env for production deployment with real API connections
# ‚ö†Ô∏è  NEVER commit this file with real secrets to version control

# ================================
# üè• CORE APPLICATION SETTINGS
# ================================

# Environment
ENVIRONMENT=production
NODE_ENV=production
PYTHON_ENV=production
DEBUG=false

# Production URLs (UPDATE THESE)
APP_BASE_URL=https://your-domain.com
FRONTEND_URL=https://your-domain.com
API_BASE_URL=https://your-domain.com/api/v1
FORCE_HTTPS=true

# ================================
# üîê SECURITY & AUTHENTICATION
# ================================

# CRITICAL: Generate secure tokens for production
# Use: openssl rand -hex 32
API_BEARER=CHANGE-THIS-TO-A-SECURE-64-CHAR-TOKEN
JWT_SECRET_KEY=CHANGE-THIS-TO-A-SECURE-64-CHAR-TOKEN
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=30

# CORS (adjust for your domain)
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com
CORS_ALLOW_CREDENTIALS=true

# ================================
# ü§ñ AI & EXTERNAL APIs (LIVE)
# ================================

# OpenAI (REQUIRED for AI features)
OPENAI_API_KEY=sk-your-actual-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000
OPENAI_TEMPERATURE=0.3

# ENABLE LIVE DATA SOURCES
USE_LIVE=1
USE_LIVE_APIS=true
USE_MYDISEASE=true
USE_MEDLINEPLUS=true
USE_PUBMED=true

# Medical Data API Endpoints (Live)
MYDISEASE_API_URL=https://mydisease.info/v1
MEDLINEPLUS_API_URL=https://connect.medlineplus.gov/service
PUBMED_API_URL=https://eutils.ncbi.nlm.nih.gov/entrez/eutils

# NCBI E-utilities API Key (RECOMMENDED)
# Get yours at: https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/
NCBI_API_KEY=your-ncbi-api-key-here

# ================================
# üíæ DATABASE (PRODUCTION)
# ================================

# PostgreSQL (required for production)
DATABASE_URL=postgresql+asyncpg://username:password@host:port/dbname

# Example configurations:
# Railway: DATABASE_URL=postgresql://postgres:password@host.railway.app:5432/railway
# Heroku: DATABASE_URL will be automatically set
# AWS RDS: postgresql://user:pass@rds-endpoint.amazonaws.com:5432/dbname

# ================================
# üöÄ REDIS CACHE & BACKGROUND JOBS
# ================================

# Redis (REQUIRED for production caching and Celery)
REDIS_URL=redis://username:password@host:port/0

# Example configurations:
# Railway: REDIS_URL=redis://default:password@host.railway.app:port
# Heroku: REDIS_URL will be automatically set by addon
# AWS ElastiCache: redis://your-cache-cluster.amazonaws.com:6379

REDIS_MAX_CONNECTIONS=20
ENABLE_CACHING=true
CACHE_TTL_SECONDS=1800

# ================================
# üõ°Ô∏è  RATE LIMITING & SECURITY
# ================================

# Production rate limiting
RATE_LIMIT_PER_MINUTE=120
RATE_LIMIT_BURST=200
RATE_LIMIT_ENABLED=true

# Security headers
ENABLE_SECURITY_HEADERS=true
CONTENT_SECURITY_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net
HSTS_MAX_AGE=31536000

# ================================
# üìä MONITORING & LOGGING
# ================================

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
ENABLE_ACCESS_LOGS=true

# Monitoring
ENABLE_METRICS=true
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE-THIS-SECURE-PASSWORD

# Health checks
HEALTH_CHECK_TIMEOUT=30
HEALTH_CHECK_INTERVAL=60

# ================================
# üöÄ SERVER CONFIGURATION
# ================================

# Server settings
SERVER_HOST=0.0.0.0
SERVER_PORT=8000
SERVER_WORKERS=4
SERVER_RELOAD=false

# Production timeouts
FUNCTION_TIMEOUT=60
FUNCTION_MEMORY=1024

# ================================
# üîß FEATURE FLAGS
# ================================

# Core features (all enabled for production)
ENABLE_SBAR_TEMPLATES=true
ENABLE_CLINICAL_OPTIMIZER=true
ENABLE_DISEASE_LOOKUP=true

# Advanced features
ENABLE_USER_AUTHENTICATION=true
ENABLE_USAGE_ANALYTICS=true
ENABLE_CHAT_HISTORY=true

# Debug features (disabled in production)
ENABLE_DEBUG_ROUTES=false
ENABLE_RELOAD=false
ENABLE_DOCS=true

# ================================
# üìß EMAIL NOTIFICATIONS (OPTIONAL)
# ================================

# SMTP for alerts and notifications
SMTP_HOST=smtp.your-provider.com
SMTP_PORT=587
SMTP_USER=noreply@your-domain.com
SMTP_PASSWORD=your-smtp-password
SMTP_TLS=true

ADMIN_EMAIL=admin@your-domain.com
ENABLE_EMAIL_NOTIFICATIONS=true

# ================================
# üîó EXTERNAL SERVICE INTEGRATIONS
# ================================

# FDA API (for drug information)
FDA_API_KEY=your-fda-api-key-here

# ClinicalTrials.gov (public API, no key needed)
CLINICAL_TRIALS_API_URL=https://clinicaltrials.gov/api/v2

# ================================
# üè• PRODUCTION DEPLOYMENT NOTES
# ================================

# 1. Update all URLs and domains above to match your deployment
# 2. Generate secure tokens: openssl rand -hex 32
# 3. Set up your database (PostgreSQL required)
# 4. Set up Redis instance (required for caching and background jobs)
# 5. Get your OpenAI API key from https://platform.openai.com/
# 6. Get NCBI API key from https://ncbiinsights.ncbi.nlm.nih.gov/
# 7. Configure your domain and SSL certificates
# 8. Set up monitoring (Grafana/Prometheus included in docker-compose)

# ================================
# üìã QUICK SETUP CHECKLIST
# ================================

# ‚úÖ Copy this file to .env
# ‚úÖ Replace all placeholder values (search for "CHANGE-THIS" and "your-")
# ‚úÖ Set up external database and Redis
# ‚úÖ Configure domain and SSL
# ‚úÖ Test with: ./deploy.sh test
# ‚úÖ Deploy with: ./deploy.sh deploy

# ================================
# üö® SECURITY REMINDERS
# ================================

# üîí Never commit .env files with real secrets
# üîí Use environment variables in CI/CD
# üîí Rotate API keys regularly
# üîí Monitor API usage and costs
# üîí Set up alerts for errors and high usage
# üîí Enable database backups
# üîí Use HTTPS everywhere